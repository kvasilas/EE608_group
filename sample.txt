Welcome to the CBC MILP Solver 
Version: 2.9.0 
Build Date: Feb 12 2015 

command line - /home/kcvas/.local/lib/python3.8/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/971d6b83f8794851827241268b261095-pulp.mps max branch printingOptions all solution /tmp/971d6b83f8794851827241268b261095-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 16 COLUMNS
At line 2178 RHS
At line 2190 BOUNDS
At line 2586 ENDATA
Problem MODEL has 11 rows, 395 columns and 1099 elements
Coin0008I MODEL read with 0 errors
Continuous objective value is 258.122 - 0.00 seconds
Cgl0003I 28 fixed, 0 tightened bounds, 0 strengthened rows, 0 substitutions
Cgl0003I 28 fixed, 0 tightened bounds, 0 strengthened rows, 0 substitutions
Cgl0004I processed model has 6 rows, 216 columns (216 integer (212 of which binary)) and 432 elements
Cutoff increment increased from 1e-05 to 0.0999
Cbc0038I Initial state - 1 integers unsatisfied sum - 0.121622
Cbc0038I Solution found of -254.4
Cbc0038I Cleaned solution of -254.4
Cbc0038I Before mini branch and bound, 215 integers at bound fixed and 0 continuous
Cbc0038I Full problem 6 rows 216 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -254.9
Cbc0038I Reduced cost fixing fixed 195 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.01634 (1) obj. -254.9 iterations 3
Cbc0038I Pass   2: suminf.    0.24419 (1) obj. -257.035 iterations 3
Cbc0038I Pass   3: suminf.    0.18649 (1) obj. -254.9 iterations 1
Cbc0038I Pass   4: suminf.    0.84842 (2) obj. -254.9 iterations 8
Cbc0038I Pass   5: suminf.    0.06536 (1) obj. -254.9 iterations 3
Cbc0038I Pass   6: suminf.    0.80451 (2) obj. -254.9 iterations 2
Cbc0038I Pass   7: suminf.    0.40000 (2) obj. -255.76 iterations 8
Cbc0038I Solution found of -255.3
Cbc0038I Cleaned solution of -255.3
Cbc0038I Before mini branch and bound, 208 integers at bound fixed and 0 continuous
Cbc0038I Full problem 6 rows 216 columns, reduced to 3 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -255.3 to -256.1 (0.00 seconds)
Cbc0038I Round again with cutoff of -256.6
Cbc0038I Reduced cost fixing fixed 200 variables on major pass 3
Cbc0038I Pass   8: suminf.    0.07190 (1) obj. -256.6 iterations 0
Cbc0038I Pass   9: suminf.    0.24419 (1) obj. -257.035 iterations 3
Cbc0038I Pass  10: suminf.    0.23243 (1) obj. -256.6 iterations 1
Cbc0038I Pass  11: suminf.    0.33784 (1) obj. -257.262 iterations 4
Cbc0038I Pass  12: suminf.    0.35948 (1) obj. -256.6 iterations 2
Cbc0038I Pass  13: suminf.    0.33784 (1) obj. -257.262 iterations 2
Cbc0038I Pass  14: suminf.    0.33784 (1) obj. -257.262 iterations 1
Cbc0038I Pass  15: suminf.    0.33784 (1) obj. -257.262 iterations 1
Cbc0038I Pass  16: suminf.    0.23243 (1) obj. -256.6 iterations 7
Cbc0038I Pass  17: suminf.    0.24419 (1) obj. -257.765 iterations 5
Cbc0038I Pass  18: suminf.    0.24419 (1) obj. -257.765 iterations 3
Cbc0038I Pass  19: suminf.    0.27568 (1) obj. -256.6 iterations 1
Cbc0038I Pass  20: suminf.    0.64105 (2) obj. -256.6 iterations 3
Cbc0038I Solution found of -256.8
Cbc0038I Cleaned solution of -256.8
Cbc0038I Before mini branch and bound, 210 integers at bound fixed and 0 continuous
Cbc0038I Full problem 6 rows 216 columns, reduced to 2 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -257.3
Cbc0038I Reduced cost fixing fixed 203 variables on major pass 4
Cbc0038I Pass  21: suminf.    0.09477 (1) obj. -257.3 iterations 0
Cbc0038I Pass  22: suminf.    0.64286 (2) obj. -257.3 iterations 3
Cbc0038I Pass  23: suminf.    0.64286 (2) obj. -257.3 iterations 2
Cbc0038I Pass  24: suminf.    0.64286 (2) obj. -257.3 iterations 0
Cbc0038I Pass  25: suminf.    0.64286 (2) obj. -257.3 iterations 0
Cbc0038I Pass  26: suminf.    0.64286 (2) obj. -257.3 iterations 0
Cbc0038I Pass  27: suminf.    0.31046 (1) obj. -257.3 iterations 6
Cbc0038I Pass  28: suminf.    0.24419 (1) obj. -257.765 iterations 3
Cbc0038I Pass  29: suminf.    0.25676 (1) obj. -257.3 iterations 1
Cbc0038I Pass  30: suminf.    0.41106 (2) obj. -257.3 iterations 5
Cbc0038I Pass  31: suminf.    0.41106 (2) obj. -257.3 iterations 1
Cbc0038I Pass  32: suminf.    0.14474 (1) obj. -257.767 iterations 4
Cbc0038I Pass  33: suminf.    0.14474 (1) obj. -257.767 iterations 0
Cbc0038I Pass  34: suminf.    0.90826 (3) obj. -257.3 iterations 3
Cbc0038I Pass  35: suminf.    0.44056 (3) obj. -257.3 iterations 3
Cbc0038I Pass  36: suminf.    0.16993 (1) obj. -257.3 iterations 3
Cbc0038I Pass  37: suminf.    0.46887 (3) obj. -257.3 iterations 6
Cbc0038I Pass  38: suminf.    0.44969 (3) obj. -257.3 iterations 1
Cbc0038I Pass  39: suminf.    0.09477 (1) obj. -257.3 iterations 4
Cbc0038I Pass  40: suminf.    0.64286 (2) obj. -257.3 iterations 3
Cbc0038I Pass  41: suminf.    0.64286 (2) obj. -257.3 iterations 2
Cbc0038I Pass  42: suminf.    0.64286 (2) obj. -257.3 iterations 0
Cbc0038I Pass  43: suminf.    0.64286 (2) obj. -257.3 iterations 0
Cbc0038I Pass  44: suminf.    0.46887 (3) obj. -257.3 iterations 7
Cbc0038I Pass  45: suminf.    0.44969 (3) obj. -257.3 iterations 2
Cbc0038I Pass  46: suminf.    0.09477 (1) obj. -257.3 iterations 4
Cbc0038I Pass  47: suminf.    0.64286 (2) obj. -257.3 iterations 3
Cbc0038I Pass  48: suminf.    0.64286 (2) obj. -257.3 iterations 0
Cbc0038I Pass  49: suminf.    0.69745 (2) obj. -257.3 iterations 1
Cbc0038I Pass  50: suminf.    1.00000 (2) obj. -258 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 210 integers at bound fixed and 0 continuous
Cbc0038I Full problem 6 rows 216 columns, reduced to 2 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -256.8 - took 0.01 seconds
Cbc0012I Integer solution of -256.8 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 6 rows 216 columns, reduced to 2 rows 4 columns
Cbc0031I 8 added rows had average density of 9.625
Cbc0013I At root node, 8 cuts changed objective from -258.12162 to -257.2772 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 158 row cuts average 10.2 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 70 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -256.8 best solution, best possible -257.2772 (0.06 seconds)
Cbc0001I Search completed - best objective -256.8, took 567 iterations and 8 nodes (0.07 seconds)
Cbc0032I Strong branching done 64 times (204 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 2, 209 variables fixed on reduced cost
Cuts at root node changed objective from -258.122 to -257.277
Probing was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Gomory was tried 113 times and created 159 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Knapsack was tried 113 times and created 79 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                256.80000000
Enumerated nodes:               8
Total iterations:               567
Time (CPU seconds):             0.08
Time (Wallclock seconds):       0.08

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.08

Variables:

DST_Jets_ = 1.0
QB_Ryan_Fitzpatrick = 1.0
RB_James_Conner = 1.0
RB_Melvin_Gordon_III = 1.0
TE_Jared_Cook = 1.0
TE_Jesse_James = 1.0
WR_DeSean_Jackson = 1.0
WR_JuJu_Smith_Schuster = 1.0
WR_Kenny_Golladay = 1.0
WR_Will_Fuller_V = 1.0
---------------------------------------

Constraints:
2500*1.0 + 5500*1.0 + 6700*1.0 + 7400*1.0 + 3600*1.0 + 2800*1.0 + 4900*1.0 + 6400*1.0 + 4800*1.0 + 5300*1.0 = 49900.0
---------------------------------------

Score:
13.0*1.0 + 39.6*1.0 + 28.9*1.0 + 30.6*1.0 + 19.5*1.0 + 18.4*1.0 + 30.3*1.0 + 27.0*1.0 + 21.2*1.0 + 28.3*1.0 = 256.8
['Alvin Kamara', 'Melvin Gordon III', 'Todd Gurley II', 'Michael Thomas', 'Tyreek Hill', 'DeSean Jackson', 'Jesse James']
210.50000000000003
['James Conner', 'Austin Ekeler', 'Melvin Gordon III', 'DeSean Jackson', 'Will Fuller V', 'Kenny Golladay', 'Tyreek Hill', 'Ryan Fitzpatrick', 'Jesse James']
